---
# Source: welcome/templates/nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: welcome-configmap
  labels:
    "app.kubernetes.io/name": 'welcome'
    "helm.sh/chart": "welcome-1.0.3"
    "app.kubernetes.io/managed-by": "Helm"
    "app.kubernetes.io/instance": "welcome"
data:
   nginx.conf: |-
    server {
      listen 80;
      location / {
        root /public;
        index index.html;
        try_files $uri $uri/ /index.html;
      }

      location /api {
        default_type application/json;
        return 200 '{"name": "world"}';
      }
    }
---
# Source: welcome/templates/welecome-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: welcome-service
  namespace: default
  labels:
    "app.kubernetes.io/name": 'welcome'
    "helm.sh/chart": "welcome-1.0.3"
    "app.kubernetes.io/managed-by": "Helm"
    "app.kubernetes.io/instance": "welcome"
spec:
  ports:
    - port: 80
      name: http
      targetPort: 80
  selector:
    "app.kubernetes.io/instance": "welcome"
  type: ClusterIP
---
# Source: welcome/templates/welcome-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: welcome-deployment
  labels:
    app.kubernetes.io/instance: "welcome"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: "welcome"
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "welcome"
    spec:
      initContainers:
        - name: html-install
          image: cropio/busybox-wget-https
          command: ["/bin/sh", "-c", "if [ $(ls -pl /public | grep -v total | wc -l) == 0 ]; then wget -qO public.zip http://github.com/SeongJuMoon/template-base/releases/download/1.0.0/public.zip && unzip public.zip -d /public; else echo 'already cached assetfile'; fi"]
          volumeMounts:
          - name: storage-volume
            mountPath: /public
      containers:
      - name: welcome
        image: nginx:latest
        volumeMounts:
        - name: storage-volume
          mountPath: /public
        - name: config-volume
          mountPath: /etc/nginx/conf.d/
        ports:
        - containerPort: 80
      volumes:
        - name: config-volume
          configMap:
            name: welcome-configmap
        - name: storage-volume
          persistentVolumeClaim:
            claimName: jenkins
